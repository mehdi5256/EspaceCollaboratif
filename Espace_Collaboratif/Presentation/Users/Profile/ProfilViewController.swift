//
//  ProfilViewController.swift
//  Espace_Collaboratif
//
//  Created by Mehdi on 14/10/2020.
//  Copyright (c) 2020 mehdi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher

protocol ProfilDisplayLogic: class
{
  func displaySomething(viewModel: Profil.Something.ViewModel)
}

class ProfilViewController: UIViewController, ProfilDisplayLogic
{
  var interactor: ProfilBusinessLogic?
  var router: (NSObjectProtocol & ProfilRoutingLogic & ProfilDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ProfilInteractor()
    let presenter = ProfilPresenter()
    let router = ProfilRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
    @IBOutlet weak var ProfilImage: UIImageView!
    
    @IBOutlet weak var Username: UILabel!
    @IBOutlet weak var Mail: UILabel!
    override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
    Username.text = UserDefaultLogged.firstNameUD + " " + UserDefaultLogged.lasttNameUD
    Mail.text = UserDefaultLogged.emailUD
    ProfilImage.kf.setImage(with: URL(string: UserDefaultLogged.IMGUD), placeholder: UIImage(named: "loadingimage")) {
    result in
    switch result {
    case .success:
        break
    case .failure:
        self.ProfilImage.image = UIImage(named: "loadingimage")!
    }
    }
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = Profil.Something.Request()
    interactor?.doSomething(request: request)
  }
    @IBAction func BtnLogout(_ sender: Any) {
        
        // create the alert
              let alert = UIAlertController(title: "Déconnexion", message: "Voulez vous vraiment se déconnecter?", preferredStyle: UIAlertController.Style.alert)

              // add the actions (buttons)
              alert.addAction(UIAlertAction(title: "Ok", style: .destructive, handler: { (action: UIAlertAction!) in
              print("Handle Ok logic here")
                
                UserDefaultLogged.isUserLogged = false
                self.performSegue(withIdentifier: "logout", sender: self)

              }))
              alert.addAction(UIAlertAction(title: "Cancel", style: UIAlertAction.Style.cancel, handler: nil))

              // show the alert
              self.present(alert, animated: true, completion: nil)
          }
    
    
  func displaySomething(viewModel: Profil.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}

