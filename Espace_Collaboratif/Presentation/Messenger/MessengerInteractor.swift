//
//  MessengerInteractor.swift
//  Espace_Collaboratif
//
//  Created by mehdi on 4/30/20.
//  Copyright (c) 2020 mehdi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MessengerBusinessLogic
{
    func getRoomById (id:Int)
    func PostMsg(type: String, file: String, room: [String: Any], user: [String: Any], body: String)
}

protocol MessengerDataStore
{
  //var name: String { get set }
}

class MessengerInteractor: MessengerBusinessLogic, MessengerDataStore
{
    
    
 
    
  var presenter: MessengerPresentationLogic?
  var worker: MessengerWorker?
  //var name: String = ""
  
  // MARK: Do something
    
  func getRoomById(id: Int) {
        worker = MessengerWorker()
              worker?.getRoomsById(id: id).then {
              roomdid in
              print(roomdid)
                self.presenter?.presentGetRoomByIdSuccess(roomdid: roomdid)
                  }.catch {
                  error in
              self.presenter?.presentGetRoomByIdError(error: error.localizedDescription)
              }
   }
    
    
    func PostMsg(type: String, file: String, room: [String: Any], user: [String: Any], body: String) {
        worker = MessengerWorker()
        worker?.PostMsg(type: type, file: file, room: room, user: user, body: body).then {
            msg in
            print(msg)

            self.presenter?.presentPostMsgdSuccess(msg: [msg])
                }.catch {
                error in
            self.presenter?.presentPostMsgdError(error: error.localizedDescription)
            }
            
            
            
        }

    }
  

