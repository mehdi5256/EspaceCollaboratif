//
//  DetailTopicPresenter.swift
//  Espace_Collaboratif
//
//  Created by mehdi on 8/7/20.
//  Copyright (c) 2020 mehdi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailTopicPresentationLogic
{
  func presentSomething(response: DetailTopic.Something.Response)
    func presentPostReplySuccess(reply: Reply1)
    func presentPostReplyError(error:String)
    func presentzidReplySucess(response : Reply1)
    
}

class DetailTopicPresenter: DetailTopicPresentationLogic
{
    func presentzidReplySucess(response: Reply1) {
    viewController?.presentzidreplySuccess(reply: response)

    }
    
    func presentPostReplySuccess(reply: Reply1) {
    viewController?.displayPostReplySucess(reply : reply)

    }
    
    func presentPostReplyError(error: String) {
    viewController?.displayPostReplyError(error: error)

    }
    
  weak var viewController: DetailTopicDisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: DetailTopic.Something.Response)
  {
    let viewModel = DetailTopic.Something.ViewModel()
    viewController?.displaySomething(viewModel: viewModel)
  }
}
